version: '3'
services:
  postgres_db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_db:/var/lib/postgresql/data'
    logging:
      driver: none
    ports:
      - 5432:5432
  redis:
    image: redis:4.0-alpine
    command: redis-server
    volumes:
      - redis:/data
    ports:
      - 6379
    logging:
      driver: none
  web:
    build: .
    command: "bundle exec rails s -p 3000 -b '0.0.0.0'"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: ecs_application_db
      DB_PORT: 5432
      DB_HOST: postgres_db
      RAILS_MAX_THREADS: 5
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - .:/rails-app
      - bundle:/bundle
    ports:
      - '3000:3000'
    depends_on:
      - 'postgres_db'
      - 'redis'
volumes:
  postgres_db:
  bundle:
  redis:
# version: '3'
# volumes:
#   redis_data:
#   pg_data:
# services:
#   # postgres_db:
#   #   env_file: ./.docker/docker.env
#   #   image: postgres:14-alpine
#   #   volumes:
#   #     - pg_data:/var/lib/postgresql/data
#   #     - .:/app
#   #   user: postgres
#   #   environment:
#   #     - POSTGRES_PASSWORD=postgres
#   #   healthcheck:
#   #     test: ['CMD-SHELL', 'pg_isready']
#   #     interval: 10s
#   #     timeout: 5s
#   #     retries: 5
#   db:
#     image: postgres:14-alpine
#     restart: always
#     environment:
#       - POSTGRES_HOST_AUTH_METHOD=trust
#     ports:
#       - 5432:5432
#     volumes:
#       - ./tmp/postgres_data:/var/lib/postgresql/data

#   redis:
#     image: redis:alpine
#     volumes:
#       - redis_data:/data
#     command: redis-server
#     healthcheck:
#       test: ['CMD', 'redis-cli', 'ping']
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   api:
#     build: .
#     command: "bundle exec rails s -p 3000 -b '0.0.0.0'"
#     # environment:
#     #   DB_HOST: postgres_db
#     #   DB_NAME: myappdb
#     #   DB_USERNAME: postgres
#     #   DB_PASSWORD: postgres
#     volumes:
#       - .:/app:cached
#     ports:
#       - '3000:3000'
#     depends_on:
#       - db
